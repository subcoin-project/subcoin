(function() {var type_impls = {
"subcoin_service":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AuxStore-for-Backend%3CBlock%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#704\">source</a><a href=\"#impl-AuxStore-for-Backend%3CBlock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Block&gt; AuxStore for <a class=\"struct\" href=\"sc_fast_sync_backend/struct.Backend.html\" title=\"struct sc_fast_sync_backend::Backend\">Backend</a>&lt;Block&gt;<div class=\"where\">where\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_aux\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#705-715\">source</a><a href=\"#method.insert_aux\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">insert_aux</a>&lt;'a, 'b, 'c, I, D&gt;(\n    &amp;self,\n    insert: I,\n    delete: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    'b: 'a,\n    'c: 'a,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (&amp;'c [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;'c [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;,\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a &amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Insert auxiliary data into key-value store. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_aux\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#719\">source</a><a href=\"#method.get_aux\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_aux</a>(&amp;self, key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;, Error&gt;</h4></section></summary><div class='docblock'>Query auxiliary data from key-value store.</div></details></div></details>","AuxStore","subcoin_service::InMemoryBackend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Backend%3CBlock%3E-for-Backend%3CBlock%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#724\">source</a><a href=\"#impl-Backend%3CBlock%3E-for-Backend%3CBlock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Block&gt; Backend&lt;Block&gt; for <a class=\"struct\" href=\"sc_fast_sync_backend/struct.Backend.html\" title=\"struct sc_fast_sync_backend::Backend\">Backend</a>&lt;Block&gt;<div class=\"where\">where\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.BlockImportOperation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockImportOperation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockImportOperation</a> = <a class=\"struct\" href=\"sc_fast_sync_backend/struct.BlockImportOperation.html\" title=\"struct sc_fast_sync_backend::BlockImportOperation\">BlockImportOperation</a>&lt;Block&gt;</h4></section></summary><div class='docblock'>Associated block insertion operation type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Blockchain\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Blockchain\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Blockchain</a> = <a class=\"struct\" href=\"sc_fast_sync_backend/struct.Blockchain.html\" title=\"struct sc_fast_sync_backend::Blockchain\">Blockchain</a>&lt;Block&gt;</h4></section></summary><div class='docblock'>Associated blockchain backend type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">State</a> = ChainState&lt;Block&gt;</h4></section></summary><div class='docblock'>Associated state backend type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OffchainStorage\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OffchainStorage\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OffchainStorage</a> = InMemOffchainStorage</h4></section></summary><div class='docblock'>Offchain workers local storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.begin_operation\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#730\">source</a><a href=\"#method.begin_operation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">begin_operation</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"sc_fast_sync_backend/struct.Backend.html\" title=\"struct sc_fast_sync_backend::Backend\">Backend</a>&lt;Block&gt; as Backend&lt;Block&gt;&gt;::BlockImportOperation, Error&gt;</h4></section></summary><div class='docblock'>Begin a new block insertion transaction with given parent block id. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.begin_state_operation\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#743-747\">source</a><a href=\"#method.begin_state_operation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">begin_state_operation</a>(\n    &amp;self,\n    operation: &amp;mut &lt;<a class=\"struct\" href=\"sc_fast_sync_backend/struct.Backend.html\" title=\"struct sc_fast_sync_backend::Backend\">Backend</a>&lt;Block&gt; as Backend&lt;Block&gt;&gt;::BlockImportOperation,\n    block: &lt;Block as Block&gt;::Hash,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Note an operation to contain state transition.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_operation\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#753\">source</a><a href=\"#method.commit_operation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_operation</a>(\n    &amp;self,\n    operation: &lt;<a class=\"struct\" href=\"sc_fast_sync_backend/struct.Backend.html\" title=\"struct sc_fast_sync_backend::Backend\">Backend</a>&lt;Block&gt; as Backend&lt;Block&gt;&gt;::BlockImportOperation,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Commit block insertion.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#788-792\">source</a><a href=\"#method.finalize_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_block</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    justification: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;([<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;)&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Finalize block with given <code>hash</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_justification\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#796-800\">source</a><a href=\"#method.append_justification\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">append_justification</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    justification: ([<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Append justification to the block with the given <code>hash</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.blockchain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#804\">source</a><a href=\"#method.blockchain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">blockchain</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"sc_fast_sync_backend/struct.Backend.html\" title=\"struct sc_fast_sync_backend::Backend\">Backend</a>&lt;Block&gt; as Backend&lt;Block&gt;&gt;::Blockchain</h4></section></summary><div class='docblock'>Returns reference to blockchain backend.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.usage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#808\">source</a><a href=\"#method.usage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">usage_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;UsageInfo&gt;</h4></section></summary><div class='docblock'>Returns current usage statistics.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_storage\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#812\">source</a><a href=\"#method.offchain_storage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_storage</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"sc_fast_sync_backend/struct.Backend.html\" title=\"struct sc_fast_sync_backend::Backend\">Backend</a>&lt;Block&gt; as Backend&lt;Block&gt;&gt;::OffchainStorage&gt;</h4></section></summary><div class='docblock'>Returns a handle to offchain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.state_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#816\">source</a><a href=\"#method.state_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">state_at</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"sc_fast_sync_backend/struct.Backend.html\" title=\"struct sc_fast_sync_backend::Backend\">Backend</a>&lt;Block&gt; as Backend&lt;Block&gt;&gt;::State, Error&gt;</h4></section></summary><div class='docblock'>Returns state backend with post-state of given block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.revert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#829-833\">source</a><a href=\"#method.revert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">revert</a>(\n    &amp;self,\n    _n: &lt;&lt;Block as Block&gt;::Header as Header&gt;::Number,\n    _revert_finalized: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&lt;&lt;Block as Block&gt;::Header as Header&gt;::Number, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;&lt;Block as Block&gt;::Hash&gt;), Error&gt;</h4></section></summary><div class='docblock'>Attempts to revert the chain by <code>n</code> blocks. If <code>revert_finalized</code> is set it will attempt to\nrevert past any finalized block, this is unsafe and can potentially leave the node in an\ninconsistent state. All blocks higher than the best block are also reverted and not counting\ntowards <code>n</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_leaf_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#837\">source</a><a href=\"#method.remove_leaf_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_leaf_block</a>(&amp;self, _hash: &lt;Block as Block&gt;::Hash) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Discard non-best, unfinalized leaf block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_import_lock\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#841\">source</a><a href=\"#method.get_import_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_import_lock</a>(&amp;self) -&gt; &amp;RwLock&lt;RawRwLock, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Gain access to the import lock around this backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.requires_full_sync\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#845\">source</a><a href=\"#method.requires_full_sync\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">requires_full_sync</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tells whether the backend requires full-sync mode.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#849\">source</a><a href=\"#method.pin_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pin_block</a>(&amp;self, hash: &lt;Block as Block&gt;::Hash) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Pin the block to keep body, justification and state available after pruning.\nNumber of pins are reference counted. Users need to make sure to perform\none call to [<code>Self::unpin_block</code>] per call to [<code>Self::pin_block</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpin_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#855\">source</a><a href=\"#method.unpin_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unpin_block</a>(&amp;self, hash: &lt;Block as Block&gt;::Hash)</h4></section></summary><div class='docblock'>Unpin the block to allow pruning.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.have_state_at\" class=\"method trait-impl\"><a href=\"#method.have_state_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">have_state_at</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    _number: &lt;&lt;Block as Block&gt;::Header as Header&gt;::Number,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if state for given block is available.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_aux\" class=\"method trait-impl\"><a href=\"#method.insert_aux\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">insert_aux</a>&lt;'a, 'b, 'c, I, D&gt;(\n    &amp;self,\n    insert: I,\n    delete: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    'b: 'a,\n    'c: 'a,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (&amp;'c [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;'c [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;,\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a &amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Insert auxiliary data into key-value store.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_aux\" class=\"method trait-impl\"><a href=\"#method.get_aux\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_aux</a>(&amp;self, key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;, Error&gt;</h4></section></summary><div class='docblock'>Query auxiliary data from key-value store.</div></details></div></details>","Backend<Block>","subcoin_service::InMemoryBackend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Backend%3CBlock%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#650\">source</a><a href=\"#impl-Backend%3CBlock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Block&gt; <a class=\"struct\" href=\"sc_fast_sync_backend/struct.Backend.html\" title=\"struct sc_fast_sync_backend::Backend\">Backend</a>&lt;Block&gt;<div class=\"where\">where\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#652\">source</a><h4 class=\"code-header\">pub fn <a href=\"sc_fast_sync_backend/struct.Backend.html#tymethod.new\" class=\"fn\">new</a>(\n    runtime_hash: &lt;Block as Block&gt;::Hash,\n    runtime_code: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"sc_fast_sync_backend/struct.Backend.html\" title=\"struct sc_fast_sync_backend::Backend\">Backend</a>&lt;Block&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new instance of in-mem backend for the fast sync purpose.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.initialize\" class=\"method\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#662-667\">source</a><h4 class=\"code-header\">pub fn <a href=\"sc_fast_sync_backend/struct.Backend.html#tymethod.initialize\" class=\"fn\">initialize</a>(\n    &amp;mut self,\n    best_header: &lt;Block as Block&gt;::Header,\n    genesis_hash: &lt;Block as Block&gt;::Hash,\n    state: TrieBackend&lt;MemoryDB&lt;&lt;&lt;Block as Block&gt;::Header as Header&gt;::Hashing, PrefixedKey&lt;&lt;&lt;Block as Block&gt;::Header as Header&gt;::Hashing&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;, &lt;&lt;Block as Block&gt;::Header as Header&gt;::Hashing&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Initialize the blockchain storage and chain state.</p>\n</div></details><section id=\"method.storage_root\" class=\"method\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#689\">source</a><h4 class=\"code-header\">pub fn <a href=\"sc_fast_sync_backend/struct.Backend.html#tymethod.storage_root\" class=\"fn\">storage_root</a>(&amp;self) -&gt; &lt;Block as Block&gt;::Hash</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#698\">source</a><h4 class=\"code-header\">pub fn <a href=\"sc_fast_sync_backend/struct.Backend.html#tymethod.pin_refs\" class=\"fn\">pin_refs</a>(&amp;self, hash: &amp;&lt;Block as Block&gt;::Hash) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Return the number of references active for a pinned block.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>For testing purposes only!</p>\n</div></details></div></details>",0,"subcoin_service::InMemoryBackend"],["<section id=\"impl-LocalBackend%3CBlock%3E-for-Backend%3CBlock%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_fast_sync_backend/lib.rs.html#864\">source</a><a href=\"#impl-LocalBackend%3CBlock%3E-for-Backend%3CBlock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Block&gt; LocalBackend&lt;Block&gt; for <a class=\"struct\" href=\"sc_fast_sync_backend/struct.Backend.html\" title=\"struct sc_fast_sync_backend::Backend\">Backend</a>&lt;Block&gt;<div class=\"where\">where\n    Block: Block,</div></h3></section>","LocalBackend<Block>","subcoin_service::InMemoryBackend"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()