searchState.loadedDescShard("subcoin_network", 0, "Bitcoin Network\nBitcoin block sync is enabled on startup.\nAvailable for sync requests.\nControls the block sync from Bitcoin P2P network.\nDownload the full blocks (both headers and bodies) in …\nNetwork configuration.\nThe peer has been deprioritized due to past syncing issues …\nThe node is downloading blocks from peers.\nActively downloading new blocks, starting from the given …\nNetwork error type.\nAn error occurred during the transaction submission.\nDownload the headers first, followed by the block bodies.\nThe node is idle and not currently major syncing.\nThe node is importing downloaded blocks into the local …\nPeer latency in milliseconds.\nSubcoin network service interface.\nA handle for interacting with the network processor.\nRepresents the status of network.\nSubcoin network disabled.\nBitcoin block sync is fully disabled.\nSubcoin network is disabled, but chain is syncing from …\nBitcoin block sync is paused until Substrate fast sync …\nIdentifies a peer.\nContains all the data about a Peer that we are trying to …\nThe state of syncing between a Peer and ourselves.\nRepresents the result of submitting a transaction to the …\nTransaction was submitted successfully.\nRepresents the sync status of node.\nRepresents the strategy for block syncing.\nAn IPv4 socket address.\nAn IPv6 socket address.\nNode base path.\nThe number of the best block that we’ve seen for this …\nWhether to enable the block sync on startup.\nCreates Subcoin network.\nWhether the network instnace is running.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetrieves a transaction by its Txid.\nRetrieves a transaction by its Txid.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether to accept the peer in ipv4 only.\nReturns <code>true</code> if the peer is available for syncing.\nWhether the node is actively performing a major sync.\nReturns a flag indicating whether the node is actively …\nLatency of connection to this peer.\nSpecify the local listen address.\nMaximum number of inbound peer connections.\nMaximum number of outbound peer connections.\nBitcoin network type.\nThe number of peers currently connected to the node.\nPeer id of this peer.\nPersistent peer latency threshold in milliseconds (ms).\nWhether to connect to the seednode only.\nList of seednodes.\nSends a transaction to the network.\nSends a transaction to the network.\nStarts the block sync in chain sync component.\nStarts the block sync in chain sync component.\nThe state of syncing this peer is in for us, generally …\nProvides high-level status information about network.\nProvides high-level status information about network.\nReturns the currently syncing peers.\nReturns the currently syncing peers.\nCurrent sync status of the node.\nMajor sync strategy.\nTarget block of the chain sync.\nThe total number of bytes received from the network.\nThe total number of bytes sent to the network.\nNumber of times the peer has stalled.")