searchState.loadedDescShard("pallet_bitcoin", 0, "Bitcoin Pallet\nA struct that implements the <code>WeightInfo</code> trait for Bitcoin …\nTransaction output index.\nWeight functions needed for <code>pallet_bitcoin</code>.\nReturns the storage key for the referenced output.\nReturns the final storage prefix for the storage item <code>Coins</code>…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nCalculates the weight of <code>Call::transact</code>.\nContains a variant per dispatchable extrinsic that this …\nUTXO set.\nSize of the entire UTXO set.\nConfiguration trait of this pallet.\nThe <code>Event</code> enum of this pallet\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>transact</code>.\nAuto-generated docs-only module listing all (public and …\nAn unsigned extrinsic for embedding a Bitcoin transaction …\nAn unsigned extrinsic for embedding a Bitcoin transaction …\nAn unsigned extrinsic for embedding a Bitcoin transaction …\nUTXO set.\nSize of the entire UTXO set.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInput from a coinbase transaction, which does not …\nA block height lock time value.\nAn absolute lock time value, representing either a block …\nA reference to a transaction output.\nInput from a regular transaction, which references a …\nRegular bitcoin transaction input.\nA UNIX timestamp lock time value.\nBitcoin transaction.\nBitcoin transaction input.\nBitcoin transaction output.\nWrapper type for representing <code>bitcoin::Txid</code> in runtime, …\nThe Witness is the data used to unlock bitcoin since the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nList of transaction inputs.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBlock height or timestamp. Transaction cannot be included …\nList of transaction outputs.\nThe reference to the previous output that is being used as …\nThe script which must be satisfied for the output to be …\nThe sequence number, which suggests to miners which of two …\nThe transaction ID of the referenced output.\nThe unlocking script (scriptSig) that pushes values onto …\nThe value of the output, in satoshis.\nThe protocol version, is currently expected to be 1 or 2 …\nThe index of the output within the referenced transaction.\nWitness data: an array of byte-arrays. Note that this …\nArbitrary data used in the coinbase transaction, such as …\nSequence.")